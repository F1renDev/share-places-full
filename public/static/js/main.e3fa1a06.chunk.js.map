{"version":3,"sources":["shared/components/FormElements/Button/Button.module.css","shared/components/Navigation/NavLinks/NavLinks.module.css","user/components/UserItem/UserItem.module.css","shared/components/UIElements/Modal/Modal.module.css","shared/components/Navigation/MainNavigation/MainNavigation.module.css","shared/components/UIElements/LoadingSpinner/LoadingSpinner.js","shared/components/UIElements/Card/Card.js","shared/context/auth-context.js","shared/components/UIElements/Backdrop/Backdrop.js","shared/components/UIElements/LoadingSpinner/LoadingSpinner.module.css","shared/components/FormElements/Button/Button.js","shared/components/UIElements/ErrorModal/ErrorModal.js","shared/hooks/http-hook.js","shared/components/UIElements/Modal/Modal.js","user/components/UsersList/UsersList.module.css","shared/components/UIElements/Avatar/Avatar.module.css","shared/components/UIElements/Card/Card.module.css","shared/components/UIElements/Modal/Transitions.module.css","shared/components/UIElements/Backdrop/Backdrop.module.css","shared/components/Navigation/MainHeader/MainHeader.module.css","shared/components/Navigation/SideDrawer/SideDrawer.module.css","shared/hooks/auth-hook.js","shared/components/UIElements/Avatar/Avatar.js","user/components/UserItem/UserItem.js","user/components/UsersList/UsersList.js","user/pages/Users.js","shared/components/Navigation/MainHeader/MainHeader.js","shared/components/Navigation/NavLinks/NavLinks.js","shared/components/Navigation/SideDrawer/SideDrawer.js","shared/components/Navigation/MainNavigation/MainNavigation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LoadingSpinner","props","className","asOverlay","styles","loadingSpinnerOverlay","ldsDualRing","Card","style","children","AuthContext","createContext","isLoggedIn","userId","token","login","logout","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","Button","newSize","size","charAt","toUpperCase","slice","href","inverse","ButtonInverse","danger","ButtonDanger","to","exact","type","disabled","ErrorModal","onCancel","onClear","header","show","error","footer","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequest","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","ModalOverlay","content","Modal","ModalHeader","headerClass","onSubmit","event","preventDefault","ModalContent","contentClass","ModalFooter","footerClass","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","transitionStyles","logoutTimer","Avatar","src","image","alt","width","height","UserItem","UserItem__content","id","UserItem__image","process","name","UserItem__info","placeCount","UsersList","items","length","map","user","key","places","Users","loadedUsers","setLoadedUsers","users","console","log","fetchUsers","MainHeader","NavLinks","auth","useContext","activeClassName","active","SideDrawer","CSSTransition","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","MainNavigation__drawerNav","MainNavigation__menuBtn","MainNavigation__title","MainNavigation__headerNav","NewPlace","React","lazy","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","uid","expirationDate","tokenExpirationInfo","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","Boolean","window","location","hostname","match","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e3fa1a06.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1H6KU\",\"ButtonInverse\":\"Button_ButtonInverse__2Y9zU\",\"ButtonDanger\":\"Button_ButtonDanger__YNzE8\",\"ButtonSmall\":\"Button_ButtonSmall__40ODT\",\"ButtonBig\":\"Button_ButtonBig__3Uv--\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLinks\":\"NavLinks_NavLinks__2j3lu\",\"active\":\"NavLinks_active__x9c_F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserItem\":\"UserItem_UserItem__pdTsj\",\"UserItem__content\":\"UserItem_UserItem__content__37_nn\",\"UserItem__image\":\"UserItem_UserItem__image__3OmLg\",\"UserItem__info\":\"UserItem_UserItem__info__1kCSo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__3Hr6Q\",\"ModalHeader\":\"Modal_ModalHeader__ozgAJ\",\"ModalContent\":\"Modal_ModalContent__2N4cx\",\"ModalFooter\":\"Modal_ModalFooter__3ZCmy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainNavigation__menuBtn\":\"MainNavigation_MainNavigation__menuBtn__YodhL\",\"MainNavigation__title\":\"MainNavigation_MainNavigation__title__3CUkj\",\"MainNavigation__headerNav\":\"MainNavigation_MainNavigation__headerNav__2E9WK\",\"MainNavigation__drawerNav\":\"MainNavigation_MainNavigation__drawerNav__1S1j6\"};","import React from 'react';\n\nimport styles from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && styles.loadingSpinnerOverlay}`}>\n      <div className={styles.ldsDualRing}></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\n\nimport styles from \"./Card.module.css\";\n\nconst Card = props => {\n  return (\n    <div className={`${styles.Card} ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {}\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport styles from \"./Backdrop.module.css\";\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className={styles.Backdrop} onClick={props.onClick}></div>,\n    document.getElementById(\"backdrop\")\n  );\n};\n\nexport default Backdrop;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsDualRing\":\"LoadingSpinner_ldsDualRing__QRVL3\",\"loadingSpinnerOverlay\":\"LoadingSpinner_loadingSpinnerOverlay__1vgz2\"};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport styles from \"./Button.module.css\";\n\nconst Button = props => {\n  //A custom button component styled differently based on props\n\n  const newSize = props.size\n    ? props.size.charAt(0).toUpperCase() + props.size.slice(1)\n    : null;\n\n  if (props.href) {\n    return (\n      <a\n        className={`${styles.Button} ${styles.Button}${newSize ||\n          \"default\"} ${props.inverse && styles.ButtonInverse} ${props.danger &&\n          styles.ButtonDanger}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`${styles.Button} ${styles.Button}${newSize ||\n          \"default\"} ${props.inverse && styles.ButtonInverse} ${props.danger &&\n          styles.ButtonDanger}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`${styles.Button} ${styles.Button}${newSize ||\n        \"default\"} ${props.inverse && styles.ButtonInverse} ${props.danger &&\n        styles.ButtonDanger}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\n\nimport Modal from \"../Modal/Modal\";\nimport Button from \"../../FormElements/Button/Button\";\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  //useRef used instead managin through state because there is no need to update the UI\r\n  // it's some behind the scenes data being managed\r\n  const activeHttpRequest = useRef([]);\r\n\r\n  //Wrapped in useCallback so that the function is never recreated when the component rerenders\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequest.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method: method,\r\n          body: body,\r\n          headers: headers,\r\n          signal: httpAbortCtrl.signal\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequest.current = activeHttpRequest.current.filter(reqCtrl => reqCtrl !== httpAbortCtrl)\r\n\r\n        // If not response.ok, than we have a 500-ish or 400-ish response code, but not an error\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    //useCallback has no dependncies, so [] is passed\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    //Used as a cleanup function before the next time useEffect runs again\r\n    //or also when the component using this custom hook unmounts\r\n    return () => {\r\n      activeHttpRequest.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    isLoading: isLoading,\r\n    error: error,\r\n    sendRequest: sendRequest,\r\n    clearError: clearError\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./Modal.module.css\";\r\nimport transitionStyles from \"./Transitions.module.css\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\n\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`${styles.Modal} ${props.className}`} style={props.style}>\r\n      <header className={`${styles.ModalHeader} ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      {/* If any button is rendered inside the form I don't reload the page\r\n      by triggering form submition */}\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`${styles.ModalContent} ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`${styles.ModalFooter} ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  // It's semantically a bad idea to render modal next to li item.\r\n  // Separate place is better\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal\"));\r\n};\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames={transitionStyles}\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UsersList\":\"UsersList_UsersList__1LzkD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Avatar_Avatar__SqIjm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__22SWM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Transitions_enter__aG25g\",\"enterActive\":\"Transitions_enterActive__2_asU\",\"exit\":\"Transitions_exit__2yxKl\",\"exitActive\":\"Transitions_exitActive__1K5aJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__npvEE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainHeader\":\"MainHeader_MainHeader__2hEf5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1O92P\"};","import { useState, useCallback, useEffect } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n  const [userId, setUserId] = useState(false);\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    //Setting the new expiration date to the current time + 1 hour\r\n    //or getting the expiration date if it was set before\r\n    const tokenExpirationInfo =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokenExpirationInfo);\r\n    //Storing the user id and that user's token in localStorage\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token,\r\n        //toISOString() ensures that no data gets lost when this date is stringified\r\n        expiration: tokenExpirationInfo.toISOString()\r\n      })\r\n    );\r\n    setUserId(uid);\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpirationDate(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(\"userData\");\r\n  }, []);\r\n\r\n  //If there is a token and some time left to be authenticated the timer is set to log out\r\n  //after the remaining number of minutes (lifetime = 1h)\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime =\r\n        tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  //Checking if there is a logged in user in the localStorage\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    //If there is some data and that data include a token and the expirationd date\r\n    //is in the future the user can be logged in\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    ) {\r\n      login(\r\n        storedData.userId,\r\n        storedData.token,\r\n        new Date(storedData.expiration)\r\n      );\r\n    }\r\n  }, [login]);\r\n\r\n  return { token, login, logout, userId };\r\n};\r\n","import React from 'react';\n\nimport styles from './Avatar.module.css';\n\nconst Avatar = props => {\n  return (\n    <div className={styles.Avatar} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./UserItem.module.css\";\r\n\r\nimport Avatar from \"../../../shared/components/UIElements/Avatar/Avatar\";\r\nimport Card from \"../../../shared/components/UIElements/Card/Card\";\r\n\r\nconst UserItem = props => {\r\n// A card for a single user linking to the places created by that user\r\n\r\n  return (\r\n    <li className={styles.UserItem}>\r\n      <Card className={styles.UserItem__content}>\r\n        <Link to={`/${props.id}/places`}>\r\n          <div className={styles.UserItem__image}>\r\n            <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.name} />\r\n          </div>\r\n          <div className={styles.UserItem__info}>\r\n            <h2>{props.name}</h2>\r\n            <h3>\r\n              {props.placeCount} {props.placeCount === 1 ? \"Place\" : \"Places\"}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React from \"react\";\r\nimport styles from \"./UsersList.module.css\";\r\n\r\nimport UserItem from \"../UserItem/UserItem\";\r\nimport Card from \"../../../shared/components/UIElements/Card/Card\";\r\n\r\nconst UsersList = props => {\r\n// All users output component\r\n\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>No users found.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className={styles.UsersList}>\r\n      {props.items.map(user => (\r\n        <UserItem\r\n          key={user.id}\r\n          id={user.id}\r\n          image={user.image}\r\n          name={user.name}\r\n          // number of places created by the user\r\n          placeCount={user.places.length}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport UsersList from \"../components/UsersList/UsersList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst Users = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedUsers, setLoadedUsers] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"/users\"\r\n        );\r\n\r\n        setLoadedUsers(responseData.users);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\nimport styles from \"./MainHeader.module.css\";\r\n\r\n//Header to be included on all of pages\r\n\r\nconst MainHeader = props => {\r\n  return <header className={styles.MainHeader}>{props.children}</header>;\r\n};\r\n\r\nexport default MainHeader;\r\n","import React, { useContext } from \"react\";\r\nimport styles from \"./NavLinks.module.css\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../../../shared/context/auth-context\";\r\n\r\nconst NavLinks = props => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  //A list of navigation items\r\n  return (\r\n    <ul className={styles.NavLinks}>\r\n      <li>\r\n        <NavLink activeClassName={styles.active} to=\"/\" exact>\r\n          ALL USERS\r\n        </NavLink>\r\n      </li>\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink activeClassName={styles.active} to={`/${auth.userId}/places`}>\r\n            MY PLACES\r\n          </NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink activeClassName={styles.active} to=\"/places/new\">\r\n            ADD PLACE\r\n          </NavLink>\r\n        </li>\r\n      )}\r\n      {!auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink activeClassName={styles.active} to=\"/auth\">\r\n            AUTHENTICATE\r\n          </NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <button onClick={auth.logout}>LOGOUT</button>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styles from \"./SideDrawer.module.css\";\r\n\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nconst SideDrawer = props => {\r\n  // A sidedrawer with smooth in-out animation\r\n\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames=\"slide-in-left\"\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className={styles.SideDrawer} onClick={props.onClick}>\r\n        {props.children}\r\n      </aside>\r\n    </CSSTransition>\r\n  );\r\n\r\n  // Slider is displayed via portal so he would sit higher in the DOM tree\r\n\r\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer\"));\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./MainNavigation.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MainHeader from \"../MainHeader/MainHeader\";\r\nimport NavLinks from \"../NavLinks/NavLinks\";\r\nimport SideDrawer from \"../SideDrawer/SideDrawer\";\r\nimport Backdrop from \"../../UIElements/Backdrop/Backdrop\";\r\n\r\nconst MainNavigation = props => {\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n  const openDrawerHandler = () => {\r\n    setDrawerIsOpen(true);\r\n  };\r\n\r\n  const closeDrawerHandler = () => {\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  //If in mobile view - the navigation links look different\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {drawerIsOpen ? <Backdrop onClick={closeDrawerHandler} /> : null}\r\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n        <nav className={styles.MainNavigation__drawerNav}>\r\n          <NavLinks />\r\n        </nav>\r\n      </SideDrawer>\r\n      <MainHeader>\r\n        <button className={styles.MainNavigation__menuBtn} onClick={openDrawerHandler}>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n        </button>\r\n        <h1 className={styles.MainNavigation__title}>\r\n          <Link to=\"/\">Your Places</Link>\r\n        </h1>\r\n        <nav className={styles.MainNavigation__headerNav}>\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React, { Suspense } from \"react\";\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\n\nimport Users from \"./user/pages/Users\";\n// import NewPlace from \"./places/pages/NewPlace/NewPlace\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation/MainNavigation\";\n// import UserPlaces from \"./places/pages/UserPlaces/UserPlaces\";\n// import UpdatePlace from \"./places/pages/UpdatePlace/UpdatePlace\";\n// import Auth from \"./user/pages/Auth/Auth\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner/LoadingSpinner\";\n\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace/NewPlace\"));\nconst UserPlaces = React.lazy(() =>\n  import(\"./places/pages/UserPlaces/UserPlaces\")\n);\nconst UpdatePlace = React.lazy(() =>\n  import(\"./places/pages/UpdatePlace/UpdatePlace\")\n);\nconst Auth = React.lazy(() => import(\"./user/pages/Auth/Auth\"));\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\" exact>\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      }}\n    >\n      <BrowserRouter>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </BrowserRouter>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}