{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/utility/validators.js","shared/components/FormElements/Input/Input.js","shared/components/FormElements/Input/Input.module.css","shared/hooks/form-hook.js","shared/components/ImageUpload/ImageUpload.js","shared/components/ImageUpload/ImageUpload.module.css","places/pages/NewPlace/NewPlace.module.css","places/pages/NewPlace/NewPlace.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","props","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","touchHandler","element","placeholder","onChange","onBlur","rows","className","styles","FormControl","FormControlInvalid","htmlFor","label","errorText","module","exports","formReducer","formIsValid","inputId","inputs","useForm","inintialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","ImportUpload","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","fileIsValid","files","imageUpload","imageUpload__preview","src","alt","onClick","current","click","NewPlace","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","title","description","address","image","inputHandler","history","useHistory","placeSubmitHandler","a","preventDefault","formData","FormData","append","process","Authorization","token","Fragment","onClear","PlaceForm","onSubmit","asOverlay","disabled"],"mappings":"uGAAA,8CAEA,SAASA,EAAQC,EAAQC,GACvB,IAAIC,EAAOC,OAAOD,KAAKF,GAEvB,GAAIG,OAAOC,sBAAuB,CAChC,IAAIC,EAAUF,OAAOC,sBAAsBJ,GACvCC,IAAgBI,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOJ,OAAOK,yBAAyBR,EAAQO,GAAKE,eAEtDP,EAAKQ,KAAKC,MAAMT,EAAMG,GAGxB,OAAOH,EAGM,SAASU,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNf,EAAQI,OAAOc,IAAS,GAAMC,SAAQ,SAAUC,GAC9C,YAAeN,EAAQM,EAAKF,EAAOE,OAE5BhB,OAAOiB,0BAChBjB,OAAOkB,iBAAiBR,EAAQV,OAAOiB,0BAA0BH,IAEjElB,EAAQI,OAAOc,IAASC,SAAQ,SAAUC,GACxChB,OAAOmB,eAAeT,EAAQM,EAAKhB,OAAOK,yBAAyBS,EAAQE,OAKjF,OAAON,I,gCCjCM,SAASU,EAAgBC,EAAKL,EAAKM,GAYhD,OAXIN,KAAOK,EACTrB,OAAOmB,eAAeE,EAAKL,EAAK,CAC9BM,MAAOA,EACPhB,YAAY,EACZiB,cAAc,EACdC,UAAU,IAGZH,EAAIL,GAAOM,EAGND,EAZT,mC,gCCAA,4IAQaI,EAAoB,iBAAO,CAAEC,KARX,YAUlBC,EAAsB,SAAAC,GAAG,MAAK,CACzCF,KAV+B,YAW/BE,IAAKA,IAQMC,EAAkB,iBAAO,CAAEH,KAfX,UAiBhBI,EAAW,SAACR,EAAOS,GAC9B,IAAIC,GAAU,EAD+B,uBAE7C,YAAwBD,EAAxB,+CAAoC,CAAC,IAA1BE,EAAyB,QAxBP,YAyBvBA,EAAUP,OACZM,EAAUA,GAAWV,EAAMY,OAAOrB,OAAS,GAzBhB,cA2BzBoB,EAAUP,OACZM,EAAUA,GAAWV,EAAMY,OAAOrB,QAAUoB,EAAUL,KA3B3B,cA6BzBK,EAAUP,OACZM,EAAUA,GAAWV,EAAMY,OAAOrB,QAAUoB,EAAUL,KA7BjC,QA+BnBK,EAAUP,OACZM,EAAUA,IAAYV,GAASW,EAAUL,KA/BpB,QAiCnBK,EAAUP,OACZM,EAAUA,IAAYV,GAASW,EAAUL,KAjClB,UAmCrBK,EAAUP,OACZM,EAAUA,GAAW,iBAAiBG,KAAKb,KAnBF,kFAsB7C,OAAOU,I,4FCrCHI,EAAe,SAACC,EAAOC,GAC3B,OAAQA,EAAOZ,MACb,IAAK,SACH,OAAO,eACFW,EADL,CAEEf,MAAOgB,EAAOV,IACdI,QAASF,YAASQ,EAAOV,IAAKU,EAAOP,cAEzC,IAAK,QACH,OAAO,eACFM,EADL,CAEEE,WAAW,IAGf,QACE,OAAOF,IAsEEG,IAlED,SAAAC,GAAU,IAAD,EACUC,qBAAWN,EAAc,CACtDd,MAAOmB,EAAME,cAAgB,GAC7BJ,WAAW,EACXP,QAASS,EAAMG,eAAgB,IAJZ,mBACdC,EADc,KACFC,EADE,KAObC,EAAgBN,EAAhBM,GAAIC,EAAYP,EAAZO,QACJ1B,EAAmBuB,EAAnBvB,MAAOU,EAAYa,EAAZb,QAGfiB,qBAAU,WACRD,EAAQD,EAAIzB,EAAOU,KAClB,CAACe,EAAIzB,EAAOU,EAASgB,IAExB,IAAME,EAAgB,SAAAC,GACpBL,EAAS,CACPpB,KAAM,SACNE,IAAKuB,EAAMzC,OAAOY,MAClBS,WAAYU,EAAMV,cAKhBqB,EAAe,WACnBN,EAAS,CACPpB,KAAM,WAIJ2B,EACc,UAAlBZ,EAAMY,QACJ,2BACEN,GAAIN,EAAMM,GACVrB,KAAMe,EAAMf,KACZ4B,YAAab,EAAMa,YACnBC,SAAUL,EACVM,OAAQJ,EACR9B,MAAOuB,EAAWvB,QAGpB,8BACEyB,GAAIN,EAAMM,GACVU,KAAMhB,EAAMgB,MAAQ,EACpBF,SAAUL,EACVM,OAAQJ,EACR9B,MAAOuB,EAAWvB,QAIxB,OACE,yBAGEoC,UAAS,UAAKC,IAAOC,YAAZ,aAA4Bf,EAAWb,SAC9Ca,EAAWN,WACXoB,IAAOE,qBAET,2BAAOC,QAASrB,EAAMM,IAAKN,EAAMsB,OAChCV,GAECR,EAAWb,SAAWa,EAAWN,WAAa,2BAAIE,EAAMuB,c,mBCtFhEC,EAAOC,QAAU,CAAC,YAAc,2BAA2B,mBAAqB,oC,oGCC1EC,EAAc,SAAC9B,EAAOC,GAC1B,OAAQA,EAAOZ,MACb,IAAK,eACH,IAAI0C,GAAc,EAClB,IAAK,IAAMC,KAAWhC,EAAMiC,OACtBjC,EAAMiC,OAAOD,KAIfD,EADEC,IAAY/B,EAAO+B,QACPD,GAAe9B,EAAON,QAEtBoC,GAAe/B,EAAMiC,OAAOD,GAASrC,SAGvD,OAAO,eACFK,EADL,CAEEiC,OAAO,eACFjC,EAAMiC,OADL,eAEHhC,EAAO+B,QAAU,CAAE/C,MAAOgB,EAAOhB,MAAOU,QAASM,EAAON,WAE3DA,QAASoC,IAEb,IAAK,WACH,MAAO,CACLE,OAAQhC,EAAOgC,OACftC,QAASM,EAAO8B,aAEpB,QACE,OAAO/B,IAIAkC,EAAU,SAACC,EAAgBC,GAAyB,IAAD,EAChC/B,qBAAWyB,EAAa,CACpDG,OAAQE,EACRxC,QAASyC,IAHmD,mBACvDC,EADuD,KAC5C5B,EAD4C,KAwB9D,MAAO,CAAC4B,EAjBaC,uBAAY,SAAC5B,EAAIzB,EAAOU,GAC3Cc,EAAS,CACPpB,KAAM,eACNJ,MAAOA,EACPU,QAASA,EACTqC,QAAStB,MAEV,IAEiB4B,uBAAY,SAACC,EAAWC,GAC1C/B,EAAS,CACPpB,KAAM,WACN4C,OAAQM,EACRR,YAAaS,MAEd,O,oFCaUC,IAhEM,SAAArC,GAAU,IAAD,EACJsC,qBADI,mBACrBC,EADqB,KACfC,EADe,OAEQF,qBAFR,mBAErBG,EAFqB,KAETC,EAFS,OAGEJ,oBAAS,GAHX,mBAGrB/C,EAHqB,KAGZoD,EAHY,KAOtBC,EAAgBC,mBAEtBrC,qBAAU,WAER,GAAK+B,EAAL,CAGA,IAAMO,EAAa,IAAIC,WACvBD,EAAWE,OAAS,WAClBN,EAAcI,EAAWG,SAE3BH,EAAWI,cAAcX,MACxB,CAACA,IAqBJ,OACE,yBAAKtB,UAAWC,IAAOC,aACrB,2BACEb,GAAIN,EAAMM,GACV6C,IAAKP,EACLQ,MAAO,CAAEC,QAAS,QAClBpE,KAAK,OACLqE,OAAO,kBACPxC,SA3BgB,SAAAJ,GACpB,IAAI6C,EACAC,EAAcjE,EACdmB,EAAMzC,OAAOwF,OAAuC,IAA9B/C,EAAMzC,OAAOwF,MAAMrF,QAC3CmF,EAAa7C,EAAMzC,OAAOwF,MAAM,GAChCjB,EAAQe,GACRZ,GAAW,GACXa,GAAc,IAEdb,GAAW,GACXa,GAAc,GAEhBxD,EAAMO,QAAQP,EAAMM,GAAIiD,EAAYC,MAiBlC,yBAAKvC,UAAWC,IAAOwC,aACrB,yBAAKzC,UAAWC,IAAOyC,sBACpBlB,GAAc,yBAAKmB,IAAKnB,EAAYoB,IAAI,aACvCpB,GAAc,sDAElB,kBAAC,IAAD,CAAQxD,KAAK,SAAS6E,QAnBH,WACvBlB,EAAcmB,QAAQC,UAkBlB,gBAIAzE,GAAW,2BAAIS,EAAMuB,c,mBC/D7BC,EAAOC,QAAU,CAAC,YAAc,iCAAiC,qBAAuB,0CAA0C,YAAc,iCAAiC,mBAAqB,0C,mBCAtMD,EAAOC,QAAU,CAAC,UAAY,8B,4LC4GfwC,UA5FE,WACf,IAAMC,EAAOC,qBAAWC,KADH,EAEiCC,cAA9CC,EAFa,EAEbA,UAAWC,EAFE,EAEFA,MAAOC,EAFL,EAEKA,YAAaC,EAFlB,EAEkBA,WAFlB,EAGa3C,YAChC,CACE4C,MAAO,CACL7F,MAAO,GACPU,SAAS,GAEXoF,YAAa,CACX9F,MAAO,GACPU,SAAS,GAEXqF,QAAS,CACP/F,MAAO,GACPU,SAAS,GAEXsF,MAAO,CACLhG,MAAO,KACPU,SAAS,KAGb,GAtBmB,mBAGd0C,EAHc,KAGH6C,EAHG,KAyBfC,EAAUC,cAGVC,EAAkB,uCAAG,WAAMvE,GAAN,eAAAwE,EAAA,6DACzBxE,EAAMyE,iBADmB,UAGjBC,EAAW,IAAIC,UAEZC,OAAO,QAASrD,EAAUJ,OAAO6C,MAAM7F,OAChDuG,EAASE,OAAO,cAAerD,EAAUJ,OAAO8C,YAAY9F,OAC5DuG,EAASE,OAAO,UAAWrD,EAAUJ,OAAO+C,QAAQ/F,OACpDuG,EAASE,OAAO,QAASrD,EAAUJ,OAAOgD,MAAMhG,OARzB,SAYjB2F,EAAYe,qDAA+C,OAAQH,EAAU,CACjFI,cAAe,UAAYtB,EAAKuB,QAbX,OAgBvBV,EAAQjH,KAAK,KAhBU,4GAAH,sDAoBxB,OACE,kBAAC,IAAM4H,SAAP,KACE,kBAAC,IAAD,CAAYnB,MAAOA,EAAOoB,QAASlB,IACnC,0BAAMxD,UAAWC,IAAO0E,UAAWC,SAAUZ,GAC1CX,GAAa,kBAAC,IAAD,CAAgBwB,WAAS,IACvC,kBAAC,IAAD,CACExF,GAAG,QACHM,QAAQ,QACR3B,KAAK,OACLqC,MAAM,QACNhC,WAAY,CAACN,eACbuC,UAAU,+BACVhB,QAASuE,IAEX,kBAAC,IAAD,CACExE,GAAG,cACHM,QAAQ,WACRU,MAAM,cACNhC,WAAY,CAACJ,YAAoB,IACjCqC,UAAU,6DACVhB,QAASuE,IAEX,kBAAC,IAAD,CACExE,GAAG,UACHM,QAAQ,QACR3B,KAAK,OACLqC,MAAM,UACNhC,WAAY,CAACN,eACbuC,UAAU,iCACVhB,QAASuE,IAEX,kBAAC,IAAD,CACExE,GAAG,QACHC,QAASuE,EACTvD,UAAU,6BAEZ,kBAAC,IAAD,CAAQtC,KAAK,SAAS8G,UAAW9D,EAAU1C,SAA3C","file":"static/js/3.262f661f.chunk.js","sourcesContent":["import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from \"react\";\r\nimport styles from \"./Input.module.css\";\r\n\r\nimport { validate } from \"../../../utility/validators\";\r\n\r\n//Managing the state with reducer hook\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators)\r\n      };\r\n    case \"TOUCH\": {\r\n      return {\r\n        ...state,\r\n        isTouched: true\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouched: false,\r\n    isValid: props.initialValid || false\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  // Calling the onInput function every time id, onInput, value or isValid change\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = event => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators\r\n    });\r\n  };\r\n\r\n  // If the user hasn't yet typed anything in the form, the form is valid by default\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\"\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      //Div gets an 'invalid' style only if\r\n      // the input field is not valid and was not touched\r\n      className={`${styles.FormControl} ${!inputState.isValid &&\r\n        inputState.isTouched &&\r\n        styles.FormControlInvalid}`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {/* Same as above */}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormControl\":\"Input_FormControl__3jFHs\",\"FormControlInvalid\":\"Input_FormControlInvalid__1RuR3\"};","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if(!state.inputs[inputId]){\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (inintialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: inintialInputs,\r\n    isValid: initialFormValidity\r\n  });\r\n\r\n  // The function will only re-run if one of it's dependencies has changed\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport styles from \"./ImageUpload.module.css\";\r\n\r\nimport Button from \"../FormElements/Button/Button\";\r\n\r\nconst ImportUpload = props => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  //Not showing the file input field but rather creating a reference to it by clicking\r\n  // a styled button\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    //Generating a preview to an uploaded file\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = event => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className={styles.FormControl}>\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={styles.imageUpload}>\r\n        <div className={styles.imageUpload__preview}>\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please, pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImportUpload;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageUpload\":\"ImageUpload_imageUpload__1Q1lj\",\"imageUpload__preview\":\"ImageUpload_imageUpload__preview__1-7_n\",\"FormControl\":\"ImageUpload_FormControl__1E6n4\",\"FormControlInvalid\":\"ImageUpload_FormControlInvalid__3nAMp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PlaceForm\":\"NewPlace_PlaceForm__34yeU\"};","import React, { useContext } from \"react\";\r\nimport styles from \"./NewPlace.module.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Input from \"../../../shared/components/FormElements/Input/Input\";\r\nimport Button from \"../../../shared/components/FormElements/Button/Button\";\r\nimport ErrorModal from \"../../../shared/components/UIElements/ErrorModal/ErrorModal\";\r\nimport LoadingSpinner from \"../../../shared/components/UIElements/LoadingSpinner/LoadingSpinner\";\r\nimport ImageUpload from \"../../../shared/components/ImageUpload/ImageUpload\";\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH\r\n} from \"../../../shared/utility/validators\";\r\nimport { useForm } from \"../../../shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../../shared/context/auth-context\";\r\n\r\nconst NewPlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        isValid: false\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  //Will send the data to the server here\r\n  const placeSubmitHandler = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      //Setting up a request body keys\r\n      formData.append(\"title\", formState.inputs.title.value);\r\n      formData.append(\"description\", formState.inputs.description.value);\r\n      formData.append(\"address\", formState.inputs.address.value);\r\n      formData.append(\"image\", formState.inputs.image.value);\r\n      //The fetch API automatically adds the right headers so no need to\r\n      //set them manually\r\n      //But any custom headers should still be set manually\r\n      await sendRequest(process.env.REACT_APP_BACKEND_URL + \"/places\", \"POST\", formData, {\r\n        Authorization: \"Bearer \" + auth.token\r\n      }); \r\n      // Redirecting a user to a different page in the success case\r\n      history.push(\"/\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className={styles.PlaceForm} onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please, enter a valid title.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please, enter a valid description (At least 5 characters).\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Address\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please, enter a valid address.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload\r\n          id=\"image\"\r\n          onInput={inputHandler}\r\n          errorText=\"Please, provide an image\"\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n"],"sourceRoot":""}